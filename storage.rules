rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // üõë Bloqueia acesso de usu√°rios n√£o autenticados
    match /{allPaths=**} {
      allow read, write: if false;
    }

    // ‚úÖ Pasta "users" - Armazena arquivos de perfil, avatares, etc.
    match /users/{userId}/{fileName} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }

    // ‚úÖ Pasta "automacoes" - Armazena arquivos relacionados √†s automa√ß√µes dos usu√°rios
    match /automacoes/{userId}/{fileName} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }

    // ‚úÖ Pasta "leads" - Armazena arquivos relacionados a leads (ex: logs, hist√≥ricos, anexos)
    match /leads/{userId}/{fileName} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }

    // ‚úÖ Pasta "twilio" - Armazena arquivos da integra√ß√£o com Twilio
    match /twilio/{userId}/{fileName} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }

    // ‚úÖ Pasta "whatsapp" - Armazena arquivos enviados/recebidos pelo WhatsApp
    match /whatsapp/{userId}/{fileName} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }

    // ‚úÖ Pasta "notifications" - Armazena imagens ou conte√∫dos de notifica√ß√µes push
    match /notifications/{userId}/{fileName} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }

    // üèÜ **Admins podem acessar tudo**
    match /{allPaths=**} {
      allow read, write, delete: if request.auth != null && request.auth.token.admin == true;
    }
  }
}
